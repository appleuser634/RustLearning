fn main() {
    // 標準出力にhello world!を出力
    print!("hello world!\n");

    // 所有権について

    // 借用チェックの制限
    // 不変参照 (&) は何個でも同時に存在することが出来る
    // 不変参照 (&) と可変参照 (&mut) は同時に存在することが出来ない
    // 可変参照 (&mut) は同時に１つしか存在することが出来ない

    let a = 10; // 原本(不変)
    let aref1 = &a; // 仮の所有権を渡す(不変)
    let aref2 = &a; // 仮の所有権を渡す(不変)
    println!("{},{},{}", a, aref1, aref2); // 関数呼び出し時、もしくはコンパイル時に借用チェックが行われる

    let mut b = 10; // 原本(可変)
    let bref1 = &mut b; // 仮の所有権を渡す(可変)
    let bref2 = &mut b; // 仮の所有権を渡す(可変) この時点でbref1は存在しない
    *bref2 = 40; // 参照外しを行い、値を変更
    println!("{}", b); // 関数呼び出し時、もしくはコンパイル時に借用チェックが行われる
}
